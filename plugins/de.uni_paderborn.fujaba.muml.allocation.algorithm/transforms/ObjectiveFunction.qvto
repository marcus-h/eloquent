import Expressions;

modeltype allocationSpecification uses cs('http://www.fujaba.de/muml/allocation/language/0.1.0/cs');
modeltype oclcontext uses oclcontext('http://www.fujaba.de/muml/allocation/language/0.1.0/oclcontext');
modeltype core uses core('http://www.storydriven.org/core/0.3.1');
modeltype ilptype uses ilp('http://www.fujaba.de/muml/allocation/ilp/0.1.0');
modeltype expressions uses core::expressions('http://www.storydriven.org/core/expressions/0.3.1');
modeltype common uses core::expressions::common('http://www.storydriven.org/core/expressions/common/0.3.1');
modeltype instance uses muml::instance('http://www.fujaba.de/muml/instance/0.4.0');
modeltype hwpinstance uses hardware::hwplatforminstance('http://www.fujaba.de/muml/hardware/hwplatforminstance/1.0/');

library ObjectiveFunction;

helper SpecificationCS::createObjectiveFunction(inout ilp : IntegerLinearProgram,
	cic : ComponentInstanceConfiguration,
	hpic : HWPlatformInstanceConfiguration) {
	ilp.objectiveFunction := new ObjectiveFunctionExpression(ObjectiveGoal::MAX,
			new LiteralExpression('1'));
}

constructor ObjectiveFunctionExpression::ObjectiveFunctionExpression(goal : ObjectiveGoal,
	objectiveFunction : Expression) {
	result.goal := goal;
	result.objectiveFunction := objectiveFunction;
}